<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yui.tool.mybatis.plugin.mapper.LoveWordMapper" >
  <resultMap id="BaseResultMap" type="com.yui.tool.mybatis.plugin.po.LoveWord" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="is_delete" property="isDelete" jdbcType="TINYINT" />
    <result column="nick_name" property="nickName" jdbcType="VARCHAR" />
    <result column="times" property="times" jdbcType="BIGINT" />
    <result column="use_date" property="useDate" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.yui.tool.mybatis.plugin.po.LoveWord" extends="BaseResultMap" >
    <result column="word" property="word" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, create_date, is_delete, nick_name, times, use_date
  </sql>
  <sql id="Blob_Column_List" >
    word
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.yui.tool.mybatis.plugin.po.LoveWordExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from love_word
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.yui.tool.mybatis.plugin.po.LoveWordExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from love_word
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from love_word
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from love_word
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.yui.tool.mybatis.plugin.po.LoveWordExample" >
    delete from love_word
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yui.tool.mybatis.plugin.po.LoveWord" >
    insert into love_word (id, create_date, is_delete, 
      nick_name, times, use_date, 
      word)
    values (#{id,jdbcType=BIGINT}, #{createDate,jdbcType=TIMESTAMP}, #{isDelete,jdbcType=TINYINT}, 
      #{nickName,jdbcType=VARCHAR}, #{times,jdbcType=BIGINT}, #{useDate,jdbcType=INTEGER}, 
      #{word,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.yui.tool.mybatis.plugin.po.LoveWord" >
    insert into love_word
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="isDelete != null" >
        is_delete,
      </if>
      <if test="nickName != null" >
        nick_name,
      </if>
      <if test="times != null" >
        times,
      </if>
      <if test="useDate != null" >
        use_date,
      </if>
      <if test="word != null" >
        word,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null" >
        #{isDelete,jdbcType=TINYINT},
      </if>
      <if test="nickName != null" >
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="times != null" >
        #{times,jdbcType=BIGINT},
      </if>
      <if test="useDate != null" >
        #{useDate,jdbcType=INTEGER},
      </if>
      <if test="word != null" >
        #{word,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yui.tool.mybatis.plugin.po.LoveWordExample" resultType="java.lang.Integer" >
    select count(*) from love_word
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update love_word
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.createDate != null" >
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isDelete != null" >
        is_delete = #{record.isDelete,jdbcType=TINYINT},
      </if>
      <if test="record.nickName != null" >
        nick_name = #{record.nickName,jdbcType=VARCHAR},
      </if>
      <if test="record.times != null" >
        times = #{record.times,jdbcType=BIGINT},
      </if>
      <if test="record.useDate != null" >
        use_date = #{record.useDate,jdbcType=INTEGER},
      </if>
      <if test="record.word != null" >
        word = #{record.word,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update love_word
    set id = #{record.id,jdbcType=BIGINT},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      is_delete = #{record.isDelete,jdbcType=TINYINT},
      nick_name = #{record.nickName,jdbcType=VARCHAR},
      times = #{record.times,jdbcType=BIGINT},
      use_date = #{record.useDate,jdbcType=INTEGER},
      word = #{record.word,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update love_word
    set id = #{record.id,jdbcType=BIGINT},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      is_delete = #{record.isDelete,jdbcType=TINYINT},
      nick_name = #{record.nickName,jdbcType=VARCHAR},
      times = #{record.times,jdbcType=BIGINT},
      use_date = #{record.useDate,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yui.tool.mybatis.plugin.po.LoveWord" >
    update love_word
    <set >
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null" >
        is_delete = #{isDelete,jdbcType=TINYINT},
      </if>
      <if test="nickName != null" >
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="times != null" >
        times = #{times,jdbcType=BIGINT},
      </if>
      <if test="useDate != null" >
        use_date = #{useDate,jdbcType=INTEGER},
      </if>
      <if test="word != null" >
        word = #{word,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.yui.tool.mybatis.plugin.po.LoveWord" >
    update love_word
    set create_date = #{createDate,jdbcType=TIMESTAMP},
      is_delete = #{isDelete,jdbcType=TINYINT},
      nick_name = #{nickName,jdbcType=VARCHAR},
      times = #{times,jdbcType=BIGINT},
      use_date = #{useDate,jdbcType=INTEGER},
      word = #{word,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yui.tool.mybatis.plugin.po.LoveWord" >
    update love_word
    set create_date = #{createDate,jdbcType=TIMESTAMP},
      is_delete = #{isDelete,jdbcType=TINYINT},
      nick_name = #{nickName,jdbcType=VARCHAR},
      times = #{times,jdbcType=BIGINT},
      use_date = #{useDate,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>